name: kudulite.$(Date:yyyyMMdd).$(Rev:r)

pr:
  branches:
    include:
    - master
  paths:
    include:
    - kudulite/*
    - test/kudulite*

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - kudulite/*
    - test/kudulite*

jobs:
- job: BuildKuduLite
  displayName: Build KuduLite Image
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - bash: |
        set -e
        echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io
      continueOnError: false
      displayName: Login to ACR Registry
      env:
        pswd: $(dockerPassword)
    - bash: |
        set -e
        export CI_RUN=1
        export RUN_TESTS=1
        export namespace=$(namespace)
        export branch=$(branch)
        export tag=$(tag)
        chmod +x ./kudulite/build.sh
        ./kudulite/build.sh
      continueOnError: false
- job: TestKuduLite
  displayName: Test KuduLite Image
  dependsOn: BuildKuduLite
  pool:
    vmImage: 'ubuntu-18.04'
  strategy:
    matrix:
      V2:
        runtimeImageType: 'V2'
      V2_PYTHON37:
        runtimeImageType: 'V2_PYTHON37'
      V2_NODE10:
        runtimeImageType: 'V2_NODE10'
      V3:
        runtimeImageType: 'V3'
      V3_PYTHON37:
        runtimeImageType: 'V3_PYTHON37'
      V3_PYTHON_38:
        runtimeImageType: 'V3_PYTHON38'
      V3_NODE12:
        runtimeImageType: 'V3_NODE12'
  steps:
    - bash: |
        set -e
        echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io
      continueOnError: false
      displayName: Login to ACR Registry
      env:
        pswd: $(dockerPassword)
    - bash: |
        set -e
        export CI_RUN=1
        export RUN_TESTS=1
        export tag=$(tag)
        export storageAccountName=$(storageAccountName)
        export storageAccountKey=$(storageAccountKey)
        export v2RuntimeVersion=$(v2RuntimeVersion)
        export v3RuntimeVersion=$(v3RuntimeVersion)
        export testRuntimeImage=$(runtimeImageType)
        chmod +x ./kudulite/test.sh
        ./kudulite/test.sh
      displayName: Test KuduLite Image
      continueOnError: false
- job: PublishKuduLite
  displayName: Publish KuduLite Image
  dependsOn: TestKuduLite
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - bash: |
        set -e
        echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io
      continueOnError: false
      displayName: Login to ACR Registry
      env:
        pswd: $(dockerPassword)
    - bash: |
        set -e
        export CI_RUN=1
        export RUN_TESTS=1
        export tag=$(tag)
        chmod +x ./kudulite/publish.sh
        ./kudulite/publish.sh
      displayName: Publish KuduLite Image
      continueOnError: false