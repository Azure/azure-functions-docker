pool:
    vmImage: 'Ubuntu-latest'
    
pr:
  branches:
    include:
      - dev
      - release/4.x
  paths:
    include:
      - host/Mariner/1.0/dotnet/*
      - host/Mariner/1.0/dotnet-build.yml

trigger:
  branches:
    include:
      - dev
      - refs/tags/4.*
      - refresh/4.*
      - release/4.x
      - nightly-build

variables:
- name: image_list
  value: ''

steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/mariner/dotnet7-isolated:$(Build.SourceBranchName)
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_NAME"

      docker build -t $IMAGE_NAME \
                  -f host/Mariner/1.0/dotnet/dotnet-isolated/dotnet7-isolated.Dockerfile \
                  host/4/bullseye/amd64/dotnet/dotnet-isolated/
      npm run test $IMAGE_NAME --prefix test/
      docker push $IMAGE_NAME
    displayName: mariner-dotnet7-isolated
    continueOnError: false

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'Manifest Generator'
    inputs:
      BuildDropPath: host
      Verbosity: Verbose
      DockerImagesToScan: $(image_list)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish SBOM Artifact'
    inputs:
      targetPath: host/_manifest
      artifact: SBOM-Functions-Mariner-dotnet-$(Build.SourceBranchName)