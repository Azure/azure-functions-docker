queue: Hosted Ubuntu 1604

pr:
  branches:
    include:
      - master
  paths:
    include:
      - host/2.0/stretch/amd64/powershell/*
      - host/2.0/alpine/amd64/powershell/*

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - host/2.0/stretch/amd64/powershell/*
      - host/2.0/alpine/amd64/powershell/*

steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/powershell:$(Build.SourceBranchName)-powershell6

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/powershell/powershell6.Dockerfile \
                  host/2.0/stretch/amd64/powershell/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell6
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/powershell:$(Build.SourceBranchName)-powershell6-slim
      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/powershell/powershell6-slim.Dockerfile \
                  host/2.0/stretch/amd64/powershell/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell6-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/powershell:$(Build.SourceBranchName)-powershell6-appservice
      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/powershell/powershell6-appservice.Dockerfile \
                  host/2.0/stretch/amd64/powershell/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell6-appservice
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/powershell:$(Build.SourceBranchName)-powershell6-alpine

      docker build -t $IMAGE_NAME \
                  -f host/2.0/alpine/amd64/powershell/powershell6.Dockerfile \
                  host/2.0/alpine/amd64/powershell/
      npm run test $IMAGE_NAME --prefix test/
      docker push $IMAGE_NAME
    displayName: powershell alpine
    continueOnError: false