queue: Hosted Ubuntu 1604

pr:
  branches:
    include:
      - master
  paths:
    include:
      - host/2.0/stretch/amd64/node/node8/*

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - host/2.0/stretch/amd64/node/node8/*

steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node8

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node8/node8.Dockerfile \
                  host/2.0/stretch/amd64/node/node8
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node8
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node8-slim

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node8/node8-slim.Dockerfile \
                  host/2.0/stretch/amd64/node/node8/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node8-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node8-appservice

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node8/node8-appservice.Dockerfile \
                  host/2.0/stretch/amd64/node/node8/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node8-appservice
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node10

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node10/node10.Dockerfile \
                  host/2.0/stretch/amd64/node/node10
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node10
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node10-slim

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node10/node10-slim.Dockerfile \
                  host/2.0/stretch/amd64/node/node10/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node10-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node10-appservice

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node10/node10-appservice.Dockerfile \
                  host/2.0/stretch/amd64/node/node10/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node10-appservice
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node12

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node12/node12.Dockerfile \
                  host/2.0/stretch/amd64/node/node12
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node12
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node12-slim

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node12/node12-slim.Dockerfile \
                  host/2.0/stretch/amd64/node/node12/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node12-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/2.0/node:$(Build.SourceBranchName)-node12-appservice

      docker build -t $IMAGE_NAME \
                  -f host/2.0/stretch/amd64/node/node12/node12-appservice.Dockerfile \
                  host/2.0/stretch/amd64/node/node12/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node12-appservice
    continueOnError: false
