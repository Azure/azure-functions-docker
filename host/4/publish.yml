trigger: none
# Publish pipelines are triggered via HTTP method in release pipeline. See v4 publish
schedules:
- cron: "0 3 * * *"
  displayName: 3 AM Nightly Publish
  branches:
    include:
    - nightly-build
  always: true
pool:
    name: '1ES-Hosted-Azure-Functions'

parameters:
  - name: selectedImages
    type: object
    default: ['all']
    values:
      - all
      - dotnet6
      - dotnetIsolated6
      - dotnetIsolated7
      - dotnetIsolated8
      - dotnetIsolated9
      - java8
      - java11
      - java17
      - java21
      - node14
      - node16
      - node18
      - node20
      - node22
      - powershell7.2
      - powershell7.4
      - python3.7
      - python3.8
      - python3.9
      - python3.10
      - python3.11
  - name: PrivateVersion
    type: string
    default: 'nightly-build'
  - name: TargetVersion
    type: string
    default: '4-nightly'

variables:
  SOURCE_REGISTRY: azurefunctions.azurecr.io/azure-functions/4
  TARGET_REGISTRY: azurefunctions.azurecr.io/public/azure-functions

jobs:
- job: Publishing
  steps:
    - bash: |
        function publish_image {
          local IMAGE_TYPE=$1
          local VERSION=$2
          local PRIVATE_VERSION=$3
          local TARGET_VERSION=$4
          local ADDITIONAL_TAGS=$5

          # Pull, tag, and push the main image
          docker pull ${SOURCE_REGISTRY}/${IMAGE_TYPE}:${PRIVATE_VERSION}-${VERSION}
          docker tag ${SOURCE_REGISTRY}/${IMAGE_TYPE}:${PRIVATE_VERSION}-${VERSION} ${TARGET_REGISTRY}/${IMAGE_TYPE}:${TARGET_VERSION}-${VERSION}
          docker push ${TARGET_REGISTRY}/${IMAGE_TYPE}:${TARGET_VERSION}-${VERSION}

          # Pull, tag, and push additional tags if provided
          if [ -n "$ADDITIONAL_TAGS" ]; then
            IFS=',' read -ra TAGS <<< "$ADDITIONAL_TAGS"
            for TAG in "${TAGS[@]}"; do
              docker pull ${SOURCE_REGISTRY}/${IMAGE_TYPE}:${PRIVATE_VERSION}-${VERSION}-$TAG
              docker tag ${SOURCE_REGISTRY}/${IMAGE_TYPE}:${PRIVATE_VERSION}-${VERSION}-$TAG ${TARGET_REGISTRY}/${IMAGE_TYPE}:${TARGET_VERSION}-${VERSION}-$TAG
              docker push ${TARGET_REGISTRY}/${IMAGE_TYPE}:${TARGET_VERSION}-${VERSION}-$TAG
            done
          fi

          # Clean up
          docker system prune -a -f
        }

        echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io
      displayName: Login to Docker
      continueOnError: false
      env:
        pswd: $(dockerPassword)

    - bash: |
        publish_image "dotnet" "6" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,dotnet6-bookworm"
      displayName: Tag and Push Dotnet6 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'dotnet6'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "dotnet-isolated" "dotnet-isolated6.0" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push DotnetIsolated6.0 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'dotnetIsolated6'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "dotnet-isolated" "dotnet-isolated7.0" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push DotnetIsolated7.0 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'dotnetIsolated7'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "dotnet-isolated" "dotnet-isolated8.0" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push DotnetIsolated8.0 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'dotnetIsolated8'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "dotnet-isolated" "dotnet-isolated9.0" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "appservice"
      displayName: Tag and Push DotnetIsolated9.0 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'dotnetIsolated9'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "java" "java8" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,build"
      displayName: Tag and Push Java8 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'java8'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "java" "java11" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,build"
      displayName: Tag and Push Java11 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'java11'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "java" "java17" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,build"
      displayName: Tag and Push Java17 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'java17'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "java" "java21" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,build"
      displayName: Tag and Push Java21 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'java21'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "node" "node14" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push Node14 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'node14'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "node" "node16" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push Node16 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'node16'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "node" "node18" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push Node18 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'node18'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "node" "node20" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push Node20 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'node20'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "node" "node22" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "appservice"
      displayName: Tag and Push Node22 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'node22'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "powershell" "powershell7.2" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push Powershell7.2 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'powershell7.2'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "powershell" "powershell7.4" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice"
      displayName: Tag and Push Powershell7.4 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'powershell7.4'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "python" "python3.7" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,buildenv"
      displayName: Tag and Push Python3.7 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'python3.7'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "python" "python3.8" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,buildenv"
      displayName: Tag and Push Python3.8 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'python3.8'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "python" "python3.9" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,buildenv"
      displayName: Tag and Push Python3.9 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'python3.9'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "python" "python3.10" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,buildenv"
      displayName: Tag and Push Python3.10 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'python3.10'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false

    - bash: |
        publish_image "python" "python3.11" ${{ parameters.PrivateVersion }} ${{ parameters.TargetVersion }} "slim,appservice,buildenv"
      displayName: Tag and Push Python3.11 Images
      condition: or(contains('${{ parameters.selectedImages }}', 'python3.11'), contains('${{ parameters.selectedImages }}', 'all'))
      continueOnError: false
