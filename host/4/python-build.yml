pr:
  branches:
    include:
      - dev
      - release/4.x
  paths:
    include:
      - host/4/bullseye/amd64/python/*

trigger:
  branches:
    include:
      - dev
      - refs/tags/4.*
      - release/4.x
  paths:
    include:
      - host/4/bullseye/amd64/python/*

jobs:

- job: python37
  displayName: python 3.7
  pool:
    vmImage: ubuntu-18.04
  steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io
    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.7
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python37/python37.Dockerfile \
                  host/4/bullseye/amd64/python/python37
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.7
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.7-slim
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python37/python37-slim.Dockerfile \
                  host/4/bullseye/amd64/python/python37/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.7-slim
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.7-appservice
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python37/python37-appservice.Dockerfile \
                  host/4/bullseye/amd64/python/python37/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.7-appservice
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.7-buildenv
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python37/python37-buildenv.Dockerfile \
                  host/4/bullseye/amd64/python/python37/
      docker push $IMAGE_NAME
    displayName: python3.7-buildenv
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1
- job: python38
  displayName: python 3.8
  pool:
    vmImage: ubuntu-18.04
  steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io
    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.8
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python38/python38.Dockerfile \
                  host/4/bullseye/amd64/python/python38
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.8
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.8-slim
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python38/python38-slim.Dockerfile \
                  host/4/bullseye/amd64/python/python38/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.8-slim
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.8-appservice
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python38/python38-appservice.Dockerfile \
                  host/4/bullseye/amd64/python/python38/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.8-appservice
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.8-buildenv
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python38/python38-buildenv.Dockerfile \
                  host/4/bullseye/amd64/python/python38/
      docker push $IMAGE_NAME
    displayName: python3.8-buildenv
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

- job: python39
  displayName: python 3.9
  pool:
    vmImage: ubuntu-18.04
  steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.9

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python39/python39.Dockerfile \
                  host/4/bullseye/amd64/python/python39
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.9
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.9-slim

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python39/python39-slim.Dockerfile \
                  host/4/bullseye/amd64/python/python39/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.9-slim
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.9-appservice

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python39/python39-appservice.Dockerfile \
                  host/4/bullseye/amd64/python/python39/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.9-appservice
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/python:$(Build.SourceBranchName)-python3.9-buildenv

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/python/python39/python39-buildenv.Dockerfile \
                  host/4/bullseye/amd64/python/python39/
      docker push $IMAGE_NAME
    displayName: python3.9-buildenv
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1