pool:
    vmImage: 'Ubuntu-latest'

pr:
  branches:
    include:
      - dev
      - release/4.x
  paths:
    include:
      - host/4/bullseye/amd64/base/*
      - host/4/bullseye/amd64/powershell/powershell70/*
      - host/4/bullseye/amd64/powershell/powershell72/*

trigger:
  branches:
    include:
      - dev
      - refs/tags/4.*
      - release/4.x
  paths:
    include:
      - host/4/bullseye/amd64/base/*
      - host/4/bullseye/amd64/powershell/powershell70/*
      - host/4/bullseye/amd64/powershell/powershell72/*

steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      ./host/generate-composite.sh -4 powershell

    displayName: create powershell-appservice dockerfiles
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/powershell:$(Build.SourceBranchName)-powershell7

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/powershell/powershell70/powershell70.Dockerfile \
                  host/4/bullseye/amd64/powershell/powershell70
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell70
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/powershell:$(Build.SourceBranchName)-powershell7-slim
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/powershell/powershell70/powershell70-slim.Dockerfile \
                  host/4/bullseye/amd64/powershell/powershell70
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell70-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/powershell:$(Build.SourceBranchName)-powershell7-appservice
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/powershell/powershell70-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/powershell
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell70-appservice
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/powershell:$(Build.SourceBranchName)-powershell72

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/powershell/powershell72/powershell72.Dockerfile \
                  host/4/bullseye/amd64/powershell/powershell72
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell72
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/powershell:$(Build.SourceBranchName)-powershell72-slim
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/powershell/powershell72/powershell72-slim.Dockerfile \
                  host/4/bullseye/amd64/powershell/powershell72
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell72-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/powershell:$(Build.SourceBranchName)-powershell72-appservice
      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/powershell/powershell72-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/powershell
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: powershell72-appservice
    continueOnError: false