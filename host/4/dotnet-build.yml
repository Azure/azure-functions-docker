pool:
    vmImage: 'Ubuntu-latest'
    
pr:
  branches:
    include:
      - dev
      - release/4.x
  paths:
    include:
      - host/4/bullseye/amd64/base/*
      - host/4/bullseye/amd64/dotnet/*
      - host/4/dotnet-build.yml

trigger:
  branches:
    include:
      - dev
      - refs/tags/4.*
      - refresh/4.*
      - release/4.x
      - nightly-build

variables:
- name: image_list
  value: ''

steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      ./host/generate-composite.sh -4 dotnet

    displayName: create dotnet-appservice dockerfiles
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet:$(Build.SourceBranchName)
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_NAME"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/dotnet/dotnet-inproc/dotnet.Dockerfile \
                  host/4/bullseye/amd64/dotnet/dotnet-inproc/
      npm run test $IMAGE_NAME --prefix test/
      docker push $IMAGE_NAME
    displayName: dotnet-inproc
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet:$(Build.SourceBranchName)-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/dotnet/dotnet-inproc/dotnet-slim.Dockerfile \
                  host/4/bullseye/amd64/dotnet/dotnet-inproc/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: dotnet-inproc-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet:$(Build.SourceBranchName)-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/dotnet/dotnet-inproc-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/dotnet/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: dotnet-inproc-appservice
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet-isolated:$(Build.SourceBranchName)-dotnet-isolated6.0
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/dotnet/dotnet-isolated/dotnet-isolated.Dockerfile \
                  host/4/bullseye/amd64/dotnet/dotnet-isolated/
      npm run test $IMAGE_NAME --prefix test/
      docker push $IMAGE_NAME
    displayName: dotnet-isolated (.NET 6)
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet-isolated:$(Build.SourceBranchName)-dotnet-isolated6.0-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/dotnet/dotnet-isolated/dotnet-isolated-slim.Dockerfile \
                  host/4/bullseye/amd64/dotnet/dotnet-isolated/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: dotnet-isolated-slim (.NET 6)
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet-isolated:$(Build.SourceBranchName)-dotnet-isolated6.0-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/dotnet/dotnet-isolated-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/dotnet/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: dotnet-isolated-appservice (.NET 6)
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet-isolated:$(Build.SourceBranchName)-dotnet-isolated7.0
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/dotnet/dotnet7-isolated/dotnet-isolated.Dockerfile \
                  host/4/bullseye/amd64/dotnet/dotnet7-isolated/
      npm run test $IMAGE_NAME --prefix test/
      docker push $IMAGE_NAME
    displayName: dotnet-isolated (.NET 7 Preview)
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet-isolated:$(Build.SourceBranchName)-dotnet-isolated7.0-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/dotnet/dotnet7-isolated/dotnet-isolated-slim.Dockerfile \
                  host/4/bullseye/amd64/dotnet/dotnet7-isolated/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: dotnet-isolated-slim (.NET 7 Preview)
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet-isolated:$(Build.SourceBranchName)-dotnet-isolated7.0-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/dotnet/dotnet7-isolated-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/dotnet/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: dotnet-isolated-appservice (.NET 7 Preview)
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/dotnet-isolated:$(Build.SourceBranchName)-dotnet-isolated7.0-mariner
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/mariner/dotnet/dotnet7-isolated-appservice.Dockerfile \
                  host/mariner/dotnet/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: dotnet7-isolated-mariner
    continueOnError: false

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'Manifest Generator'
    inputs:
      BuildDropPath: host
      Verbosity: Verbose
      DockerImagesToScan: $(image_list)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish SBOM Artifact'
    inputs:
      targetPath: host/_manifest
      artifact: SBOM-Functionsv4-dotnet-$(Build.SourceBranchName)