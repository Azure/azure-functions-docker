pool:
    vmImage: 'Ubuntu-latest'

pr:
  branches:
    include:
      - dev
      - release/4.x
  paths:
    include:
      - host/4/bullseye/amd64/base/*
      - host/4/bullseye/amd64/node/*
      - host/4/node-build.yml

trigger:
  branches:
    include:
      - dev
      - refs/tags/4.*
      - refresh/4.*
      - release/4.x
      - nightly-build

steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)
  
  - bash: |
      ./host/generate-composite.sh -4 node

    displayName: create node-appservice dockerfiles
    continueOnError: false
    
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node14
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_NAME"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node14/node14.Dockerfile \
                  host/4/bullseye/amd64/node/node14
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node14
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node14-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node14/node14-slim.Dockerfile \
                  host/4/bullseye/amd64/node/node14/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node14-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node14-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/node/node14-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/node
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node14-appservice
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node16
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node16/node16.Dockerfile \
                  host/4/bullseye/amd64/node/node16
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node16
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node16-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node16/node16-slim.Dockerfile \
                  host/4/bullseye/amd64/node/node16/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node16-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node16-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/node/node16-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/node
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node16-appservice
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node18
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node18/node18.Dockerfile \
                  host/4/bullseye/amd64/node/node18
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node18
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node18-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node18/node18-slim.Dockerfile \
                  host/4/bullseye/amd64/node/node18/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node18-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node18-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/node/node18-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/node
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node18-appservice
    continueOnError: false
  
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node20
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node20/node20.Dockerfile \
                  host/4/bullseye/amd64/node/node20
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node20
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node20-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node20/node20-slim.Dockerfile \
                  host/4/bullseye/amd64/node/node20/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node20-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node20-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/node/node20-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/node
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node20-appservice
    continueOnError: false

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'Manifest Generator'
    inputs:
      BuildDropPath: host
      Verbosity: Verbose
      DockerImagesToScan: $(image_list)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish SBOM Artifact'
    inputs:
      targetPath: host/_manifest
      artifact: SBOM-Functionsv4-Node-$(Build.SourceBranchName)