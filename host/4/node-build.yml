pool:
    vmImage: 'Ubuntu-latest'

pr:
  branches:
    include:
      - dev
      - release/4.x
  paths:
    include:
      - host/4/bullseye/amd64/base/*
      - host/4/bullseye/amd64/node/*

trigger:
  branches:
    include:
      - dev
      - refs/tags/4.*
      - release/4.x
  paths:
    include:
      - host/4/bullseye/amd64/base/*
      - host/4/bullseye/amd64/node/*

steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)
  
  - bash: |
      ./host/generate-composite.sh -4 node

    displayName: create node-appservice dockerfiles
    continueOnError: false
    
  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node14

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node14/node14.Dockerfile \
                  host/4/bullseye/amd64/node/node14
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node14
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node14-slim

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node14/node14-slim.Dockerfile \
                  host/4/bullseye/amd64/node/node14/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node14-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node14-appservice

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/node/node14-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/node
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node14-appservice
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node16

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node16/node16.Dockerfile \
                  host/4/bullseye/amd64/node/node16
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node16
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node16-slim

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/node/node16/node16-slim.Dockerfile \
                  host/4/bullseye/amd64/node/node16/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node16-slim
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/4/node:$(Build.SourceBranchName)-node16-appservice

      docker build -t $IMAGE_NAME \
                  -f host/4/bullseye/amd64/out/node/node16-appservice.Dockerfile \
                  host/4/bullseye/amd64/out/node
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: node16-appservice
    continueOnError: false
