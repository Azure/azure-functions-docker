queue: Hosted Ubuntu 1604
trigger: none
variables:
  dockerId: azurefunctions

steps:
- bash: |
    # login
    echo $(dockerPassword) | docker login -u $(dockerId) --password-stdin $(dockerId).azurecr.io
  displayName: login
  continueOnError: false

- bash: |
    # login
    echo  $pswd | docker login -u $(dockerHubUserId) --password-stdin docker.io
  displayName: login docker hub
  continueOnError: false
  env:
    pswd: $(dockerHubPassword)


- bash: |
    # pull
    images=( base dotnet node python mesh powershell )
    for i in "${images[@]}"
    do
      imageName=$i:$(ReleaseVersion)
      docker pull $(dockerId).azurecr.io/azure-functions/$imageName
    done
  displayName: pull images
  continueOnError: false

- bash: |
    # tag
    set -e
    docker tag $(dockerId).azurecr.io/azure-functions/base:$(ReleaseVersion) microsoft/azure-functions-base:$(ReleaseVersion)

    docker tag $(dockerId).azurecr.io/azure-functions/dotnet:$(ReleaseVersion) microsoft/azure-functions-dotnet-core2.0:$(ReleaseVersion)

    docker tag $(dockerId).azurecr.io/azure-functions/node:$(ReleaseVersion) microsoft/azure-functions-node8:$(ReleaseVersion)

    docker tag $(dockerId).azurecr.io/azure-functions/python:$(ReleaseVersion) microsoft/azure-functions-python3.7:$(ReleaseVersion)

    docker tag $(dockerId).azurecr.io/azure-functions/mesh:$(ReleaseVersion) appsvctest/azure-functions-mesh:$(ReleaseVersion)

    docker tag $(dockerId).azurecr.io/azure-functions/powershell:$(ReleaseVersion) appsvctest/azure-functions-powershell:$(ReleaseVersion)
  displayName: tag images
  continueOnError: false

- bash: |
    # push
    set -e
    images=( "base" "dotnet-core2.0" "node8" "python3.7" "powershell" )
    for i in "${images[@]}"
    do
      docker push microsoft/azure-functions-$i:$(ReleaseVersion)
    done

    docker push appsvctest/azure-functions-mesh:$(ReleaseVersion)
  displayName: push images
  continueOnError: false
