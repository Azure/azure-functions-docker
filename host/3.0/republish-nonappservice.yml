# rePublish pipelines are triggered via HTTP method on the republish pipeline. 
# This pipeline only targets Major Version 3.0 images for republishing i.e. dotnet:3.0, python:3.0-python3.7-slim, etc.
jobs:
- job: Publish_all
  pool: 
    vmImage: 'Ubuntu-latest'
  steps:
  - bash: |
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io
    displayName: login
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      set -e
      SOURCE_REGISTRY=azurefunctions.azurecr.io/azure-functions/3.0
      TARGET_REGISTRY=azurefunctions.azurecr.io/public/azure-functions

      if [ -z "$(TargetVersion)" ]; then
        echo "ERROR: TargetVersion is required"
        exit 1
      fi

      if [ -z "$(PrivateVersion)" ]; then
        echo "ERROR: PrivateVersion is required"
        exit 1
      fi

      echo "##vso[task.setvariable variable=SOURCE_REGISTRY]$SOURCE_REGISTRY"
      echo "##vso[task.setvariable variable=TARGET_REGISTRY]$TARGET_REGISTRY"
    displayName: set env
    continueOnError: false

  - bash: |
      set -e
      docker pull $SOURCE_REGISTRY/dotnet:$(PrivateVersion)
      docker pull $SOURCE_REGISTRY/dotnet:$(PrivateVersion)-slim
      docker pull $SOURCE_REGISTRY/dotnet:$(PrivateVersion)-arm32v7
      docker pull $SOURCE_REGISTRY/dotnet:$(PrivateVersion)-bionic-arm32v7

      docker tag $SOURCE_REGISTRY/dotnet:$(PrivateVersion) $TARGET_REGISTRY/dotnet:$(TargetVersion)
      docker tag $SOURCE_REGISTRY/dotnet:$(PrivateVersion)-slim $TARGET_REGISTRY/dotnet:$(TargetVersion)-slim
      docker tag $SOURCE_REGISTRY/dotnet:$(PrivateVersion)-arm32v7 $TARGET_REGISTRY/dotnet:$(TargetVersion)-arm32v7
      docker tag $SOURCE_REGISTRY/dotnet:$(PrivateVersion)-bionic-arm32v7 $TARGET_REGISTRY/dotnet:$(TargetVersion)-bionic-arm32v7

      docker tag $SOURCE_REGISTRY/dotnet:$(PrivateVersion) $TARGET_REGISTRY/base:$(TargetVersion)
      docker tag $SOURCE_REGISTRY/dotnet:$(PrivateVersion)-slim $TARGET_REGISTRY/base:$(TargetVersion)-slim

      docker push $TARGET_REGISTRY/dotnet:$(TargetVersion)
      docker push $TARGET_REGISTRY/dotnet:$(TargetVersion)-slim
      docker push $TARGET_REGISTRY/dotnet:$(TargetVersion)-arm32v7
      docker push $TARGET_REGISTRY/dotnet:$(TargetVersion)-bionic-arm32v7
      docker push $TARGET_REGISTRY/base:$(TargetVersion)
      docker push $TARGET_REGISTRY/base:$(TargetVersion)-slim

      docker system prune -a -f
    displayName: tag and push dotnet images
    continueOnError: false

  - bash: |
      set -e
      docker pull $SOURCE_REGISTRY/dotnet-isolated:$(PrivateVersion)-dotnet-isolated5.0
      docker pull $SOURCE_REGISTRY/dotnet-isolated:$(PrivateVersion)-dotnet-isolated5.0-slim

      docker tag $SOURCE_REGISTRY/dotnet-isolated:$(PrivateVersion)-dotnet-isolated5.0 $TARGET_REGISTRY/dotnet-isolated:$(TargetVersion)
      docker tag $SOURCE_REGISTRY/dotnet-isolated:$(PrivateVersion)-dotnet-isolated5.0-slim $TARGET_REGISTRY/dotnet-isolated:$(TargetVersion)-slim

      docker tag $SOURCE_REGISTRY/dotnet-isolated:$(PrivateVersion)-dotnet-isolated5.0 $TARGET_REGISTRY/dotnet-isolated:$(TargetVersion)-dotnet-isolated5.0
      docker tag $SOURCE_REGISTRY/dotnet-isolated:$(PrivateVersion)-dotnet-isolated5.0-slim $TARGET_REGISTRY/dotnet-isolated:$(TargetVersion)-dotnet-isolated5.0-slim

      docker push $TARGET_REGISTRY/dotnet-isolated:$(TargetVersion)
      docker push $TARGET_REGISTRY/dotnet-isolated:$(TargetVersion)-slim
      docker push $TARGET_REGISTRY/dotnet-isolated:$(TargetVersion)-dotnet-isolated5.0
      docker push $TARGET_REGISTRY/dotnet-isolated:$(TargetVersion)-dotnet-isolated5.0-slim

      docker system prune -a -f
    displayName: tag and push dotnet-isolated images
    continueOnError: false

  - bash: |
      set -e
      docker pull $SOURCE_REGISTRY/java:$(PrivateVersion)-java8
      docker pull $SOURCE_REGISTRY/java:$(PrivateVersion)-java8-slim
      docker pull $SOURCE_REGISTRY/java:$(PrivateVersion)-java8-build
      docker pull $SOURCE_REGISTRY/java:$(PrivateVersion)-java11
      docker pull $SOURCE_REGISTRY/java:$(PrivateVersion)-java11-slim
      docker pull $SOURCE_REGISTRY/java:$(PrivateVersion)-java11-build

      docker tag $SOURCE_REGISTRY/java:$(PrivateVersion)-java8 $TARGET_REGISTRY/java:$(TargetVersion)
      docker tag $SOURCE_REGISTRY/java:$(PrivateVersion)-java8-slim $TARGET_REGISTRY/java:$(TargetVersion)-slim

      docker tag $SOURCE_REGISTRY/java:$(PrivateVersion)-java8 $TARGET_REGISTRY/java:$(TargetVersion)-java8
      docker tag $SOURCE_REGISTRY/java:$(PrivateVersion)-java8-slim $TARGET_REGISTRY/java:$(TargetVersion)-java8-slim

      docker tag $SOURCE_REGISTRY/java:$(PrivateVersion)-java11 $TARGET_REGISTRY/java:$(TargetVersion)-java11
      docker tag $SOURCE_REGISTRY/java:$(PrivateVersion)-java11-slim $TARGET_REGISTRY/java:$(TargetVersion)-java11-slim

      docker tag $SOURCE_REGISTRY/java:$(PrivateVersion)-java8-build $TARGET_REGISTRY/java:$(TargetVersion)-java8-build
      docker tag $SOURCE_REGISTRY/java:$(PrivateVersion)-java11-build $TARGET_REGISTRY/java:$(TargetVersion)-java11-build

      docker push $TARGET_REGISTRY/java:$(TargetVersion)
      docker push $TARGET_REGISTRY/java:$(TargetVersion)-slim

      docker push $TARGET_REGISTRY/java:$(TargetVersion)-java8
      docker push $TARGET_REGISTRY/java:$(TargetVersion)-java8-slim

      docker push $TARGET_REGISTRY/java:$(TargetVersion)-java11
      docker push $TARGET_REGISTRY/java:$(TargetVersion)-java11-slim

      docker push $TARGET_REGISTRY/java:$(TargetVersion)-java8-build
      docker push $TARGET_REGISTRY/java:$(TargetVersion)-java11-build

      docker system prune -a -f
    displayName: tag and push java images
    continueOnError: false

  - bash: |
      set -e
      docker pull $SOURCE_REGISTRY/node:$(PrivateVersion)-node10
      docker pull $SOURCE_REGISTRY/node:$(PrivateVersion)-node10-slim
      docker pull $SOURCE_REGISTRY/node:$(PrivateVersion)-node12
      docker pull $SOURCE_REGISTRY/node:$(PrivateVersion)-node12-slim
      docker pull $SOURCE_REGISTRY/node:$(PrivateVersion)-node14
      docker pull $SOURCE_REGISTRY/node:$(PrivateVersion)-node14-slim


      docker tag $SOURCE_REGISTRY/node:$(PrivateVersion)-node10 $TARGET_REGISTRY/node:$(TargetVersion)
      docker tag $SOURCE_REGISTRY/node:$(PrivateVersion)-node10-slim $TARGET_REGISTRY/node:$(TargetVersion)-slim
      docker tag $SOURCE_REGISTRY/node:$(PrivateVersion)-node10 $TARGET_REGISTRY/node:$(TargetVersion)-node10
      docker tag $SOURCE_REGISTRY/node:$(PrivateVersion)-node10-slim $TARGET_REGISTRY/node:$(TargetVersion)-node10-slim

      docker tag $SOURCE_REGISTRY/node:$(PrivateVersion)-node12 $TARGET_REGISTRY/node:$(TargetVersion)-node12
      docker tag $SOURCE_REGISTRY/node:$(PrivateVersion)-node12-slim $TARGET_REGISTRY/node:$(TargetVersion)-node12-slim

      docker tag $SOURCE_REGISTRY/node:$(PrivateVersion)-node14 $TARGET_REGISTRY/node:$(TargetVersion)-node14
      docker tag $SOURCE_REGISTRY/node:$(PrivateVersion)-node14-slim $TARGET_REGISTRY/node:$(TargetVersion)-node14-slim

      docker push $TARGET_REGISTRY/node:$(TargetVersion)
      docker push $TARGET_REGISTRY/node:$(TargetVersion)-slim


      docker push $TARGET_REGISTRY/node:$(TargetVersion)-node10
      docker push $TARGET_REGISTRY/node:$(TargetVersion)-node10-slim

      docker push $TARGET_REGISTRY/node:$(TargetVersion)-node12
      docker push $TARGET_REGISTRY/node:$(TargetVersion)-node12-slim

      docker push $TARGET_REGISTRY/node:$(TargetVersion)-node14
      docker push $TARGET_REGISTRY/node:$(TargetVersion)-node14-slim

      docker system prune -a -f
    displayName: tag and push node images
    continueOnError: false

  - bash: |
      set -e
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6-slim
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6-buildenv
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.7
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.7-slim
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.7-buildenv
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.8
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.8-slim
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.8-buildenv
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.9
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.9-slim
      docker pull $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.9-buildenv

      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6 $TARGET_REGISTRY/python:$(TargetVersion)
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6-slim $TARGET_REGISTRY/python:$(TargetVersion)-slim
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6-buildenv $TARGET_REGISTRY/python:$(TargetVersion)-buildenv

      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6 $TARGET_REGISTRY/python:$(TargetVersion)-python3.6
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6-slim $TARGET_REGISTRY/python:$(TargetVersion)-python3.6-slim
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.6-buildenv $TARGET_REGISTRY/python:$(TargetVersion)-python3.6-buildenv

      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.7 $TARGET_REGISTRY/python:$(TargetVersion)-python3.7
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.7-slim $TARGET_REGISTRY/python:$(TargetVersion)-python3.7-slim
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.7-buildenv $TARGET_REGISTRY/python:$(TargetVersion)-python3.7-buildenv

      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.8 $TARGET_REGISTRY/python:$(TargetVersion)-python3.8
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.8-slim $TARGET_REGISTRY/python:$(TargetVersion)-python3.8-slim
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.8-buildenv $TARGET_REGISTRY/python:$(TargetVersion)-python3.8-buildenv

      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.9 $TARGET_REGISTRY/python:$(TargetVersion)-python3.9
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.9-slim $TARGET_REGISTRY/python:$(TargetVersion)-python3.9-slim
      docker tag $SOURCE_REGISTRY/python:$(PrivateVersion)-python3.9-buildenv $TARGET_REGISTRY/python:$(TargetVersion)-python3.9-buildenv

      docker push $TARGET_REGISTRY/python:$(TargetVersion)
      docker push $TARGET_REGISTRY/python:$(TargetVersion)-slim
      docker push $TARGET_REGISTRY/python:$(TargetVersion)-buildenv

      # INFO 07/27/2022 - Commenting all Python 3.6 releases until we can hotfix 3.12.1.
      # docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.6
      # docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.6-slim
      # docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.6-buildenv

      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.7
      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.7-slim
      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.7-buildenv

      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.8
      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.8-slim
      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.8-buildenv

      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.9
      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.9-slim
      docker push $TARGET_REGISTRY/python:$(TargetVersion)-python3.9-buildenv

      docker system prune -a -f
    displayName: tag and push python images
    continueOnError: false
