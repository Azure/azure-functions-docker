pool:
    vmImage: 'Ubuntu-latest'

pr:
  branches:
    include:
      - dev
      - release/3.x
  paths:
    include:
      - host/3.0/buster/amd64/base/*
      - host/3.0/buster/amd64/python/*
      - host/3.0/python-build.yml

trigger:
  branches:
    include:
      - dev
      - refs/tags/3.*.*
      - refresh/3.*
      - release/3.x

variables:
  image_list: ''

jobs:
- job: python36
  displayName: python 3.6
  pool:
    vmImage: ubuntu-latest
  steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      ./host/generate-composite.sh -3 python

    displayName: create python-appservice dockerfiles
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.6
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_NAME"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python36/python36.Dockerfile \
                  host/3.0/buster/amd64/python/python36
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.6
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.6-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python36/python36-slim.Dockerfile \
                  host/3.0/buster/amd64/python/python36/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.6-slim
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.6-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/out/python/python36-appservice.Dockerfile \
                  host/3.0/buster/amd64/out/python/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.6-appservice
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.6-buildenv
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python36/python36-buildenv.Dockerfile \
                  host/3.0/buster/amd64/python/python36/
      docker push $IMAGE_NAME
    displayName: python3.6-buildenv
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'Manifest Generator'
    inputs:
      BuildDropPath: host
      Verbosity: Verbose
      DockerImagesToScan: $(image_list)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish SBOM Artifact'
    inputs:
      targetPath: host/_manifest
      artifact: SBOM-Functionsv3-Python3.6-$(Build.SourceBranchName)

- job: python37
  displayName: python 3.7
  pool:
    vmImage: ubuntu-latest
  steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      ./host/generate-composite.sh -3 python

    displayName: create python-appservice dockerfiles
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.7
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_NAME"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python37/python37.Dockerfile \
                  host/3.0/buster/amd64/python/python37
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.7
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.7-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python37/python37-slim.Dockerfile \
                  host/3.0/buster/amd64/python/python37/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.7-slim
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.7-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/out/python/python37-appservice.Dockerfile \
                  host/3.0/buster/amd64/out/python/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.7-appservice
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.7-buildenv
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python37/python37-buildenv.Dockerfile \
                  host/3.0/buster/amd64/python/python37/
      docker push $IMAGE_NAME
    displayName: python3.7-buildenv
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'Manifest Generator'
    inputs:
      BuildDropPath: host
      Verbosity: Verbose
      DockerImagesToScan: $(image_list)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish SBOM Artifact'
    inputs:
      targetPath: host/_manifest
      artifact: SBOM-Functionsv3-Python3.7-$(Build.SourceBranchName)

- job: python38
  displayName: python 3.8
  pool:
    vmImage: ubuntu-latest
  steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      ./host/generate-composite.sh -3 python

    displayName: create python-appservice dockerfiles
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.8
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_NAME"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python38/python38.Dockerfile \
                  host/3.0/buster/amd64/python/python38
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.8
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.8-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python38/python38-slim.Dockerfile \
                  host/3.0/buster/amd64/python/python38/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.8-slim
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.8-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/out/python/python38-appservice.Dockerfile \
                  host/3.0/buster/amd64/out/python/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.8-appservice
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.8-buildenv
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python38/python38-buildenv.Dockerfile \
                  host/3.0/buster/amd64/python/python38/
      docker push $IMAGE_NAME
    displayName: python3.8-buildenv
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'Manifest Generator'
    inputs:
      BuildDropPath: host
      Verbosity: Verbose
      DockerImagesToScan: $(image_list)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish SBOM Artifact'
    inputs:
      targetPath: host/_manifest
      artifact: SBOM-Functionsv3-Python3.8-$(Build.SourceBranchName)

- job: python39
  displayName: python 3.9
  pool:
    vmImage: ubuntu-latest
  steps:
  - bash: |
      # login
      set -e
      echo $pswd | docker login -u $(dockerUsername) --password-stdin azurefunctions.azurecr.io

    displayName: login to registry
    continueOnError: false
    env:
      pswd: $(dockerPassword)

  - bash: |
      ./host/generate-composite.sh -3 python

    displayName: create python-appservice dockerfiles
    continueOnError: false

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.9
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_NAME"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python39/python39.Dockerfile \
                  host/3.0/buster/amd64/python/python39
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.9
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.9-slim
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python39/python39-slim.Dockerfile \
                  host/3.0/buster/amd64/python/python39/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.9-slim
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.9-appservice
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/out/python/python39-appservice.Dockerfile \
                  host/3.0/buster/amd64/out/python/
      npm run test $IMAGE_NAME --prefix  test/
      docker push $IMAGE_NAME
    displayName: python3.9-appservice
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1

  - bash: |
      set -e
      IMAGE_NAME=azurefunctions.azurecr.io/azure-functions/3.0/python:$(Build.SourceBranchName)-python3.9-buildenv
      IMAGE_ARRAY="$(image_list),$IMAGE_NAME"
      echo "##vso[task.setvariable variable=image_list;]$IMAGE_ARRAY"

      docker build -t $IMAGE_NAME \
                  -f host/3.0/buster/amd64/python/python39/python39-buildenv.Dockerfile \
                  host/3.0/buster/amd64/python/python39/
      docker push $IMAGE_NAME
    displayName: python3.9-buildenv
    continueOnError: false
    env:
      DOCKER_BUILDKIT: 1
    
  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'Manifest Generator'
    inputs:
      BuildDropPath: host
      Verbosity: Verbose
      DockerImagesToScan: $(image_list)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish SBOM Artifact'
    inputs:
      targetPath: host/_manifest
      artifact: SBOM-Functionsv3-Python3.9-$(Build.SourceBranchName)